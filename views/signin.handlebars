<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign In</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
    <style>
        /* Reset and Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #2c5aa0 0%, #1e3a6f 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        /* Sign-in Container */
        .signin-container {
            background: white;
            border-radius: 16px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 400px;
            padding: 40px;
            position: relative;
            overflow: hidden;
        }

        .signin-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #2c5aa0 0%, #1e3a6f 100%);
        }

        /* Header */
        .signin-header {
            text-align: center;
            margin-bottom: 32px;
        }

        .signin-header h1 {
            font-size: 28px;
            font-weight: 600;
            color: #1a1a1a;
            margin-bottom: 8px;
        }

        .signin-header p {
            font-size: 16px;
            color: #6b7280;
            font-weight: 400;
        }

        /* Form */
        .signin-form {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        .form-group label {
            font-size: 14px;
            font-weight: 500;
            color: #374151;
        }

        .form-group input {
            padding: 12px 16px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.2s ease;
            background: #fafafa;
        }

        .form-group input:focus {
            outline: none;
            border-color: #2c5aa0;
            background: white;
            box-shadow: 0 0 0 3px rgba(44, 90, 160, 0.1);
        }

        .form-group input::placeholder {
            color: #9ca3af;
        }

        /* Form Options */
        .form-options {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin: 8px 0;
        }

        .checkbox-container {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 14px;
            color: #6b7280;
            cursor: pointer;
            user-select: none;
        }

        .checkbox-container input[type="checkbox"] {
            width: 18px;
            height: 18px;
            accent-color: #2c5aa0;
        }

        .forgot-link {
            font-size: 14px;
            color: #2c5aa0;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.2s ease;
        }

        .forgot-link:hover {
            color: #1e3a6f;
        }

        /* Button */
        .signin-btn {
            background: linear-gradient(135deg, #2c5aa0 0%, #1e3a6f 100%);
            color: white;
            border: none;
            padding: 14px 24px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
            margin-top: 8px;
        }

        .signin-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 8px 20px rgba(44, 90, 160, 0.3);
        }

        .signin-btn:active {
            transform: translateY(0);
        }

        /* Footer */
        .signin-footer {
            text-align: center;
            margin-top: 32px;
            padding-top: 24px;
            border-top: 1px solid #e5e7eb;
        }

        .signin-footer p {
            font-size: 14px;
            color: #6b7280;
        }

        .signin-footer a {
            color: #2c5aa0;
            text-decoration: none;
            font-weight: 500;
        }

        .signin-footer a:hover {
            color: #1e3a6f;
        }

        /* Error Message (hidden by default) */
        .error-message {
            background: #fef2f2;
            border: 1px solid #fecaca;
            border-radius: 8px;
            padding: 12px 16px;
            margin-bottom: 20px;
            color: #dc2626;
            font-size: 14px;
            display: none;
            align-items: center;
            gap: 8px;
        }

        .error-message::before {
            content: '⚠️';
            font-size: 16px;
        }

        .error-message.show {
            display: flex;
        }

        /* Loading state */
        .signin-btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
        }

        .signin-btn.loading {
            position: relative;
            color: transparent;
        }

        .signin-btn.loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 20px;
            height: 20px;
            margin: -10px 0 0 -10px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Responsive Design */
        @media (max-width: 480px) {
            .signin-container {
                padding: 24px;
                margin: 20px;
            }
            
            .signin-header h1 {
                font-size: 24px;
            }
            
            .form-options {
                flex-direction: column;
                gap: 12px;
                align-items: flex-start;
            }
        }

        /* Input validation styles */
        .form-group input:invalid:not(:focus):not(:placeholder-shown) {
            border-color: #ef4444;
            background: #fef2f2;
        }

        .form-group input:valid:not(:focus):not(:placeholder-shown) {
            border-color: #10b981;
            background: #f0fdf4;
        }
    </style>
</head>
<body>
    <div class="signin-container">
        <div class="signin-header">
            <h1>Welcome Back</h1>
            <p>Sign in to your account</p>
        </div>
        
        <div class="error-message" id="errorMessage">
            Please fill in all fields correctly
        </div>
        
        <form class="signin-form" id="signinForm">
            <div class="form-group">
                <label for="email">Email Address</label>
                <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    placeholder="Enter your email"
                    required
                >
            </div>
            
            <div class="form-group">
                <label for="password">Password</label>
                <input 
                    type="password" 
                    id="password" 
                    name="password" 
                    placeholder="Enter your password"
                    required
                    minlength="6"
                >
            </div>
            
            <div class="form-options">
                <label class="checkbox-container">
                    <input type="checkbox" name="remember" id="remember">
                    Remember me
                </label>
                <a href="#" class="forgot-link">Forgot password?</a>
            </div>
            
            <button type="submit" class="signin-btn" id="signinBtn">Sign In</button>
        </form>
        
        <div class="signin-footer">
            <p>Don't have an account? <a href="#">Sign up</a></p>
        </div>
    </div>

    <script>
        // Simple form validation and interaction
        const form = document.getElementById('signinForm');
        const errorMessage = document.getElementById('errorMessage');
        const signinBtn = document.getElementById('signinBtn');
        const emailInput = document.getElementById('email');
        const passwordInput = document.getElementById('password');

        form.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Hide previous error
            errorMessage.classList.remove('show');
            
            // Get form values
            const email = emailInput.value.trim();
            const password = passwordInput.value.trim();
            
            // Basic validation
            if (!email || !password) {
                showError('Please fill in all fields');
                return;
            }
            
            if (!isValidEmail(email)) {
                showError('Please enter a valid email address');
                return;
            }
            
            if (password.length < 6) {
                showError('Password must be at least 6 characters long');
                return;
            }
            
            // Show loading state
            signinBtn.classList.add('loading');
            signinBtn.disabled = true;
            
            // Simulate API call
            setTimeout(() => {
                signinBtn.classList.remove('loading');
                signinBtn.disabled = false;
                
                // Demo: show success or error
                if (email === 'demo@example.com' && password === 'password123') {
                    alert('Sign in successful! Welcome back.');
                    form.reset();
                } else {
                    showError('Invalid email or password');
                }
            }, 1500);
        });

        function showError(message) {
            errorMessage.textContent = message;
            errorMessage.classList.add('show');
        }

        function isValidEmail(email) {
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return emailRegex.test(email);
        }

        // Hide error message when user starts typing
        [emailInput, passwordInput].forEach(input => {
            input.addEventListener('input', () => {
                errorMessage.classList.remove('show');
            });
        });
    </script>
</body>
</html>